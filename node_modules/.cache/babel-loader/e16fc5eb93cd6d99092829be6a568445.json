{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/codeChallenge/MarsRovers/src/components/graph.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport { Accordion, Card, Button } from 'react-bootstrap';\nexport default class Graph extends React.Component {\n  render() {\n    let randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16); //generate random color\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: '1200px',\n      height: '400px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }\n      }, \"Loading Chart\"),\n      data: this.props.data.data,\n      options: {\n        colors: [`${randomColor}`],\n        title: `Rovers Route`,\n        pointShape: 'diamond',\n        pointSize: 18,\n        hAxis: {\n          title: 'S',\n          minValue: 0,\n          maxValue: this.props.bounds.x\n        },\n        vAxis: {\n          title: 'W',\n          minValue: 0,\n          maxValue: this.props.bounds.y\n        }\n      },\n      rootProps: {\n        'data-testid': '1'\n      },\n      legendToggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Rover's Report\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, \"Current Location is\", this.props.data.data)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/codeChallenge/MarsRovers/src/components/graph.js"],"names":["React","Chart","Accordion","Card","Button","Graph","Component","render","randomColor","Math","floor","random","toString","props","data","colors","title","pointShape","pointSize","hAxis","minValue","maxValue","bounds","x","vAxis","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAA0C,iBAA1C;AAEA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AAE9CC,EAAAA,MAAM,GAAE;AACR,QAAIC,WAAW,GAAG,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAtB,CADQ,CAC8D;;AAClE,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AACC,MAAA,KAAK,EAAE,QADR;AAEC,MAAA,MAAM,EAAE,OAFT;AAGC,MAAA,SAAS,EAAC,WAHX;AAIC,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJT;AAKC,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBA,IALvB;AAMC,MAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,CAAE,GAAEP,WAAY,EAAhB,CADH;AAELQ,QAAAA,KAAK,EAAG,cAFH;AAGLC,QAAAA,UAAU,EAAE,SAHP;AAILC,QAAAA,SAAS,EAAE,EAJN;AAKLC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,KAAK,EAAE,GAAT;AAAcI,UAAAA,QAAQ,EAAE,CAAxB;AAA2BC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,MAAX,CAAkBC;AAAvD,SALF;AAMLC,QAAAA,KAAK,EAAE;AAAER,UAAAA,KAAK,EAAE,GAAT;AAAcI,UAAAA,QAAQ,EAAE,CAAxB;AAA2BC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,MAAX,CAAkBG;AAAvD;AANF,OANV;AAcC,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB,OAdZ;AAeC,MAAA,YAAY,MAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAkBG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAErB,MAAtB;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAA6C,MAAA,QAAQ,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADJ,eAMI,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA+B,KAAKS,KAAL,CAAWC,IAAX,CAAgBA,IAA/C,CADA,CANJ,CADD,CAlBH,CADJ;AAiCH;;AArC6C","sourcesContent":["import React from 'react'\nimport { Chart } from \"react-google-charts\";\nimport { Accordion, Card, Button   } from 'react-bootstrap';\n\nexport default class Graph extends React.Component{\n\n    render(){\n    let randomColor = '#'+Math.floor(Math.random()*16777215).toString(16) //generate random color\n        return(\n            <div>\n               <Chart\n                width={'1200px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={this.props.data.data}\n                options={{\n                    colors: [`${randomColor}`],\n                    title: `Rovers Route`,\n                    pointShape: 'diamond',\n                    pointSize: 18,\n                    hAxis: { title: 'S', minValue: 0, maxValue: this.props.bounds.x },\n                    vAxis: { title: 'W', minValue: 0, maxValue: this.props.bounds.y },\n                }}\n                rootProps={{ 'data-testid': '1' }}\n                legendToggle\n                />\n               <Accordion>\n                <Card>\n                    <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Rover's Report\n                    </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>Current Location is{this.props.data.data}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                </Accordion>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}