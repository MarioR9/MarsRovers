{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/codeChallenge/MarsRovers/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nlet counter = 1;\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMovements = e => {\n      //Regex will prevent from storing any numbers or symbols. Only storeing set moves either M or L.\n      const checkForLorM = /[^l^m]/gi;\n      let moves = e.currentTarget.value.replace(checkForLorM, '');\n      this.setState({\n        roverMoves: moves.toUpperCase()\n      });\n    };\n\n    this.handleRovers = () => {\n      //handler will create instaces of the desired amount of rovers and push them into and array.\n      let rovers = [];\n      let nOfRovers = parseInt(this.state.numberOfRovers);\n\n      for (let i = 0; i < nOfRovers; i++) {\n        rovers.push(`rover#${i}`);\n      }\n\n      this.setState({\n        deployedRovers: rovers\n      });\n    };\n\n    this.state = {\n      gridX: '',\n      gridY: '',\n      numberOfRovers: 0,\n      roverMoves: '',\n      deployedRovers: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Grid Bounds \"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      onChange: e => {\n        this.setState({\n          gridX: e.currentTarget.value\n        });\n      },\n      \"aria-label\": \"gridPositionX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      onChange: e => {\n        this.setState({\n          gridY: e.currentTarget.value\n        });\n      },\n      \"aria-label\": \"gridPositionY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"# of Rovers\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      onChange: e => {\n        this.setState({\n          numberOfRovers: e.currentTarget.value\n        });\n      },\n      \"aria-label\": \"numberOfRovers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRovers,\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Generate\"), ' '))), this.state.deployedRovers.map(rover => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Rover#\", counter++, \" init location\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      \"aria-label\": \"gridPositionX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      \"aria-label\": \"gridPositionX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Movments\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group-move\",\n      onChange: this.handleMovements,\n      \"aria-label\": \"numberOfRovers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(XYPlot, {\n      xDomain: [40, 100],\n      yDomain: [1.5, 8],\n      width: 300,\n      getX: d => d.waiting,\n      getY: d => d.eruptions,\n      onMouseLeave: () => this.setState({\n        hoveredNode: null\n      }),\n      height: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HexbinSeries, {\n      animation: true,\n      className: \"hexbin-example\",\n      style: {\n        stroke: '#125C77',\n        strokeLinejoin: 'round'\n      },\n      onValueMouseOver: d => this.setState({\n        hoveredNode: d\n      }),\n      colorRange: ['white', 'black'],\n      radius: radius,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/codeChallenge/MarsRovers/src/App.js"],"names":["React","InputGroup","FormControl","Button","counter","App","Component","constructor","props","handleMovements","e","checkForLorM","moves","currentTarget","value","replace","setState","roverMoves","toUpperCase","handleRovers","rovers","nOfRovers","parseInt","state","numberOfRovers","i","push","deployedRovers","gridX","gridY","render","map","rover","d","waiting","eruptions","hoveredNode","stroke","strokeLinejoin","radius","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\n\nlet counter = 1;\nexport default class App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {gridX: '',gridY: '', numberOfRovers: 0 ,roverMoves: '', deployedRovers: []};\n  }\n  \n  handleMovements=(e)=>{ //Regex will prevent from storing any numbers or symbols. Only storeing set moves either M or L.\n    const checkForLorM = /[^l^m]/gi;\n    let moves = e.currentTarget.value.replace(checkForLorM,'')\n    this.setState({roverMoves: moves.toUpperCase()})\n  }\n  handleRovers=()=>{ //handler will create instaces of the desired amount of rovers and push them into and array.\n   let rovers = []\n   let nOfRovers = parseInt(this.state.numberOfRovers)\n   for(let i=0; i < nOfRovers; i++){\n     rovers.push(`rover#${i}`)\n   }\n   this.setState({deployedRovers: rovers})\n  }\n  render(){\n    return (\n      <div className=\"App\"> \n        <div className=\"input-location\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">Grid Bounds </InputGroup.Text>\n          <FormControl className=\"input-group\" onChange={(e)=>{this.setState({gridX: e.currentTarget.value})}}\n          aria-label=\"gridPositionX\"\n          />\n          <FormControl className=\"input-group\" onChange={(e)=>{this.setState({gridY: e.currentTarget.value})}}\n          aria-label=\"gridPositionY\"\n          />\n          </InputGroup.Prepend>\n        </InputGroup>\n        <div>\n        <InputGroup className=\"mb-3\"> \n          <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\"># of Rovers</InputGroup.Text>\n          <FormControl className=\"input-group\" onChange={(e)=>{this.setState({numberOfRovers: e.currentTarget.value})}}\n          aria-label=\"numberOfRovers\"\n          />\n          <Button onClick={this.handleRovers} variant=\"info\">Generate</Button>{' '}\n          </InputGroup.Prepend>\n        </InputGroup>\n        </div>\n        {this.state.deployedRovers.map(rover => \n        \n          <div > \n          <InputGroup className=\"mb-3\"> \n            <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">Rover#{counter++} init location</InputGroup.Text>\n            <FormControl className=\"input-group\" \n            aria-label=\"gridPositionX\"\n            />\n            <FormControl className=\"input-group\" \n            aria-label=\"gridPositionX\"\n            />\n            <InputGroup.Text id=\"basic-addon1\">Movments</InputGroup.Text>\n            <FormControl className=\"input-group-move\" onChange={this.handleMovements}\n            aria-label=\"numberOfRovers\"\n            />\n            </InputGroup.Prepend>\n          </InputGroup>\n          </div>\n          )}\n\n          <XYPlot\n            xDomain={[40, 100]}\n            yDomain={[1.5, 8]}\n            width={300}\n            getX={d => d.waiting}\n            getY={d => d.eruptions}\n            onMouseLeave={() => this.setState({hoveredNode: null})}\n            height={300}>\n            <HexbinSeries\n              animation\n              className=\"hexbin-example\"\n              style={{\n                stroke: '#125C77',\n                strokeLinejoin: 'round'\n              }}\n              onValueMouseOver={d => this.setState({hoveredNode: d})}\n              colorRange={['white', 'black']}\n              radius={radius}\n              data={data}/>\n          </XYPlot>\n\n        </div>\n   \n      </div>\n    );\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}