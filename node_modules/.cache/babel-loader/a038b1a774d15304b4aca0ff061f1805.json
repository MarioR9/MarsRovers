{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/codeChallenge/MarsRovers/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { ScatterChart, Scatter, Legend, ZAxis, CartesianGrid, YAxis, XAxis, Tooltip } from 'recharts';\nconst data01 = [{\n  \"x\": 0,\n  \"y\": 0\n}, {\n  \"x\": 1,\n  \"y\": 0\n}, {\n  \"x\": 1,\n  \"y\": 1\n}];\nconst data02 = [{\n  \"x\": 5,\n  \"y\": 5\n}];\nconst data03 = [{\n  \"x\": 10,\n  \"y\": 10\n}];\nlet counter = 1;\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMovements = e => {\n      //Regex will prevent from storing any numbers or symbols. Only storeing set moves either M or L.\n      const checkForLorM = /[^l^m]/gi;\n      let moves = e.currentTarget.value.replace(checkForLorM, '');\n      this.setState({\n        roverMoves: moves.toUpperCase()\n      });\n    };\n\n    this.handleRovers = () => {\n      //handler will create instaces of the desired amount of rovers and push them into and array.\n      counter = 1;\n      let rovers = [];\n      let nOfRovers = parseInt(this.state.numberOfRovers);\n\n      for (let i = 0; i < nOfRovers; i++) {\n        rovers.push(`rover#${i}`);\n      }\n\n      this.setState({\n        deployedRovers: rovers\n      });\n    };\n\n    this.state = {\n      gridX: '',\n      gridY: '',\n      numberOfRovers: 0,\n      roverMoves: '',\n      deployedRovers: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Grid Bounds \"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      onChange: e => {\n        this.setState({\n          gridX: e.currentTarget.value\n        });\n      },\n      \"aria-label\": \"gridPositionX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      onChange: e => {\n        this.setState({\n          gridY: e.currentTarget.value\n        });\n      },\n      \"aria-label\": \"gridPositionY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"# of Rovers\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      onChange: e => {\n        this.setState({\n          numberOfRovers: e.currentTarget.value\n        });\n      },\n      \"aria-label\": \"numberOfRovers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleRovers,\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Generate\"), ' '))), this.state.deployedRovers.map(rover => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Rover#\", counter++, \" init location\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      \"aria-label\": \"gridPositionX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group\",\n      \"aria-label\": \"gridPositionX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Movments\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input-group-move\",\n      onChange: this.handleMovements,\n      \"aria-label\": \"numberOfRovers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ScatterChart, {\n      width: 1000,\n      height: 500,\n      margin: {\n        top: 5,\n        right: 5,\n        bottom: 5,\n        left: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"y\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ZAxis, {\n      dataKey: \"z\",\n      range: [640],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      cursor: {\n        strokeDasharray: '3 3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Scatter, {\n      name: \"rover#1\",\n      data: data01,\n      fill: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Scatter, {\n      name: \"rover#2\",\n      data: data02,\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Scatter, {\n      name: \"rover#3\",\n      data: data03,\n      fill: \"#82cb9a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/codeChallenge/MarsRovers/src/App.js"],"names":["React","InputGroup","FormControl","Button","ScatterChart","Scatter","Legend","ZAxis","CartesianGrid","YAxis","XAxis","Tooltip","data01","data02","data03","counter","App","Component","constructor","props","handleMovements","e","checkForLorM","moves","currentTarget","value","replace","setState","roverMoves","toUpperCase","handleRovers","rovers","nOfRovers","parseInt","state","numberOfRovers","i","push","deployedRovers","gridX","gridY","render","map","rover","top","right","bottom","left","strokeDasharray"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { ScatterChart,Scatter ,Legend, ZAxis, CartesianGrid, YAxis, XAxis, Tooltip } from 'recharts';\n\nconst data01 = [\n  {\n    \"x\": 0,\n    \"y\": 0\n  },\n  {\n    \"x\": 1,\n    \"y\": 0\n  },\n  {\n    \"x\": 1,\n    \"y\": 1\n  }]\nconst data02 = [\n  {\n    \"x\": 5,\n    \"y\": 5\n  }]\n\n  const data03 = [\n    {\n      \"x\": 10,\n      \"y\": 10\n    }]\n  \nlet counter = 1;\n\nexport default class App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {gridX: '',gridY: '', numberOfRovers: 0 ,roverMoves: '', deployedRovers: []};\n  }\n  \n  handleMovements=(e)=>{ //Regex will prevent from storing any numbers or symbols. Only storeing set moves either M or L.\n    const checkForLorM = /[^l^m]/gi;\n    let moves = e.currentTarget.value.replace(checkForLorM,'')\n    this.setState({roverMoves: moves.toUpperCase()})\n  }\n  handleRovers=()=>{ //handler will create instaces of the desired amount of rovers and push them into and array.\n    counter = 1\n   let rovers = []\n   let nOfRovers = parseInt(this.state.numberOfRovers)\n    for(let i=0; i < nOfRovers; i++){\n      rovers.push(`rover#${i}`)\n    }\n    this.setState({deployedRovers: rovers})\n   \n   \n  }\n  render(){\n    return (\n      <div className=\"App\"> \n        <div className=\"input-location\">\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\">Grid Bounds </InputGroup.Text>\n          <FormControl className=\"input-group\" onChange={(e)=>{this.setState({gridX: e.currentTarget.value})}}\n          aria-label=\"gridPositionX\"\n          />\n          <FormControl className=\"input-group\" onChange={(e)=>{this.setState({gridY: e.currentTarget.value})}}\n          aria-label=\"gridPositionY\"\n          />\n          </InputGroup.Prepend>\n        </InputGroup>\n        <div>\n        <InputGroup className=\"mb-3\"> \n          <InputGroup.Prepend>\n          <InputGroup.Text id=\"basic-addon1\"># of Rovers</InputGroup.Text>\n          <FormControl className=\"input-group\" onChange={(e)=>{this.setState({numberOfRovers: e.currentTarget.value})}}\n          aria-label=\"numberOfRovers\"\n          />\n          <Button onClick={this.handleRovers} variant=\"info\">Generate</Button>{' '}\n          </InputGroup.Prepend>\n        </InputGroup>\n        </div>\n        {this.state.deployedRovers.map(rover => \n        \n          <div > \n          <InputGroup className=\"mb-3\"> \n            <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">Rover#{counter++} init location</InputGroup.Text>\n            <FormControl className=\"input-group\" \n            aria-label=\"gridPositionX\"\n            />\n            <FormControl className=\"input-group\" \n            aria-label=\"gridPositionX\"\n            />\n            <InputGroup.Text id=\"basic-addon1\">Movments</InputGroup.Text>\n            <FormControl className=\"input-group-move\" onChange={this.handleMovements}\n            aria-label=\"numberOfRovers\"\n            />\n            </InputGroup.Prepend>\n          </InputGroup>\n          </div>\n\n          )}\n        </div>\n        <div>\n\n        <ScatterChart width={1000} height={500}\n          margin={{ top: 5, right: 5, bottom: 5, left: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"x\"  />\n          <YAxis dataKey=\"y\"  />\n          <ZAxis dataKey=\"z\" range={[640]}/>\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Legend />\n          <Scatter name=\"rover#1\" data={data01} fill=\"#8884d8\" />\n          <Scatter name=\"rover#2\" data={data02} fill=\"#82ca9d\" />\n          <Scatter name=\"rover#3\" data={data03} fill=\"#82cb9a\" />\n        </ScatterChart>\n\n        </div>\n      </div>\n    );\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}