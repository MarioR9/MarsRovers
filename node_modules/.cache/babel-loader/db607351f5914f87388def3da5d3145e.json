{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/codeChallenge/MarsRovers/src/components/graph.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport { Toast } from 'react-bootstrap';\nexport default class Graph extends React.Component {\n  render() {\n    let randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16); //generate random color\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: '1200px',\n      height: '400px',\n      chartType: \"LineChart\",\n      loader: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }\n      }, \"Loading Chart\"),\n      data: this.props.data.data,\n      options: {\n        colors: [`${randomColor}`],\n        title: `Rovers Route`,\n        pointShape: 'diamond',\n        pointSize: 18,\n        hAxis: {\n          title: 'S',\n          minValue: 0,\n          maxValue: this.props.bounds.x\n        },\n        vAxis: {\n          title: 'W',\n          minValue: 0,\n          maxValue: this.props.bounds.y\n        }\n      },\n      rootProps: {\n        'data-testid': '1'\n      },\n      legendToggle: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Toast, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"holder.js/20x20?text=%20\",\n      className: \"rounded mr-2\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, \"Bootstrap\"), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"11 mins ago\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Hello, world! This is a toast message.\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/codeChallenge/MarsRovers/src/components/graph.js"],"names":["React","Chart","Toast","Graph","Component","render","randomColor","Math","floor","random","toString","props","data","colors","title","pointShape","pointSize","hAxis","minValue","maxValue","bounds","x","vAxis","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAE9CC,EAAAA,MAAM,GAAE;AACR,QAAIC,WAAW,GAAG,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAtB,CADQ,CAC8D;;AAClE,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AACC,MAAA,KAAK,EAAE,QADR;AAEC,MAAA,MAAM,EAAE,OAFT;AAGC,MAAA,SAAS,EAAC,WAHX;AAIC,MAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJT;AAKC,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBA,IALvB;AAMC,MAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,CAAE,GAAEP,WAAY,EAAhB,CADH;AAELQ,QAAAA,KAAK,EAAG,cAFH;AAGLC,QAAAA,UAAU,EAAE,SAHP;AAILC,QAAAA,SAAS,EAAE,EAJN;AAKLC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,KAAK,EAAE,GAAT;AAAcI,UAAAA,QAAQ,EAAE,CAAxB;AAA2BC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,MAAX,CAAkBC;AAAvD,SALF;AAMLC,QAAAA,KAAK,EAAE;AAAER,UAAAA,KAAK,EAAE,GAAT;AAAcI,UAAAA,QAAQ,EAAE,CAAxB;AAA2BC,UAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,MAAX,CAAkBG;AAAvD;AANF,OANV;AAeC,MAAA,SAAS,EAAE;AAAE,uBAAe;AAAjB,OAfZ;AAgBC,MAAA,YAAY,MAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAmBI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAC,0BAAT;AAAoC,MAAA,SAAS,EAAC,cAA9C;AAA6D,MAAA,GAAG,EAAC,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADA,eAMA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDANA,CAnBJ,CADJ;AA8BH;;AAlC6C","sourcesContent":["import React from 'react'\nimport { Chart } from \"react-google-charts\";\nimport { Toast } from 'react-bootstrap';\n\nexport default class Graph extends React.Component{\n\n    render(){\n    let randomColor = '#'+Math.floor(Math.random()*16777215).toString(16) //generate random color\n        return(\n            <div>\n               <Chart\n                width={'1200px'}\n                height={'400px'}\n                chartType=\"LineChart\"\n                loader={<div>Loading Chart</div>}\n                data={this.props.data.data}\n                options={{\n                    colors: [`${randomColor}`],\n                    title: `Rovers Route`,\n                    pointShape: 'diamond',\n                    pointSize: 18,\n                    hAxis: { title: 'S', minValue: 0, maxValue: this.props.bounds.x },\n                    vAxis: { title: 'W', minValue: 0, maxValue: this.props.bounds.y },\n                    \n                }}\n                rootProps={{ 'data-testid': '1' }}\n                legendToggle\n                />\n                <Toast>\n                <Toast.Header>\n                    <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n                    <strong className=\"mr-auto\">Bootstrap</strong>\n                    <small>11 mins ago</small>\n                </Toast.Header>\n                <Toast.Body>Hello, world! This is a toast message.</Toast.Body>\n                </Toast>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}